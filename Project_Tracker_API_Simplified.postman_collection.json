{
  "info": {
    "name": "Project Tracker API (Updated)",
    "description": "Updated API collection for Project Tracker Backend with improved task management, user ID references, and consistent response formats. Includes proper error handling and migration-ready endpoints.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"employee\",\n  \"department\": \"India E-commerce\",\n  \"employeeNumber\": \"EMP-1001\",\n  \"jobTitle\": \"Software Engineer\",\n  \"location\": \"Bengaluru\"\n}"
            },
            "url": "{{base_url}}/api/auth/register"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"employee\",\n  \"department\": \"India E-commerce\",\n  \"employeeNumber\": \"EMP-1001\",\n  \"jobTitle\": \"Software Engineer\",\n  \"location\": \"Bengaluru\"\n}"
                },
                "url": "{{base_url}}/api/auth/register"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"User created successfully\",\n  \"user\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"role\": \"employee\",\n    \"department\": \"India E-commerce\",\n    \"employeeNumber\": \"EMP-1001\",\n    \"isActive\": true,\n    \"emailVerified\": false,\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n  }\n}"
            },
            {
              "name": "Missing Employee Number Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"employee\",\n  \"department\": \"India E-commerce\"\n}"
                },
                "url": "{{base_url}}/api/auth/register"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Signup failed\",\n  \"error\": \"Employee Number is required. Please provide a unique employee number for this user.\"\n}"
            },
            {
              "name": "Duplicate Email Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"employeeNumber\": \"EMP-1001\"\n}"
                },
                "url": "{{base_url}}/api/auth/register"
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Signup failed\",\n  \"error\": \"Email already exists\"\n}"
            },
            {
              "name": "Duplicate Employee Number Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@example.com\",\n  \"password\": \"password123\",\n  \"employeeNumber\": \"EMP-1001\"\n}"
                },
                "url": "{{base_url}}/api/auth/register"
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Signup failed\",\n  \"error\": \"Employee Number 'EMP-1001' already exists. Please use a different employee number.\"\n}"
            }
          ]
        },
        {
          "name": "Login User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": "{{base_url}}/api/auth/login"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": "{{base_url}}/api/auth/login"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n  \"user\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"role\": \"employee\",\n    \"department\": \"India E-commerce\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Users Management (RBAC Helpers)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/users"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/users"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"role\": \"employee\",\n    \"department\": \"India E-commerce\",\n    \"isActive\": true,\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n  },\n  {\n    \"_id\": \"507f1f77bcf86cd799439012\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\",\n    \"role\": \"manager\",\n    \"department\": \"Retail E-commerce\",\n    \"isActive\": true,\n    \"createdAt\": \"2024-12-01T11:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T11:00:00.000Z\"\n  }\n]"
            }
          ]
        },
        {
          "name": "Create New User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"employee\",\n  \"department\": \"Retail E-commerce\",\n  \"employeeNumber\": \"EMP-2001\",\n  \"jobTitle\": \"UI Designer\",\n  \"location\": \"Delhi\",\n  \"manager\": \"{{user_id}}\"\n}"
            },
            "url": "{{base_url}}/api/users"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"developer\",\n  \"department\": \"Engineering\"\n}"
                },
                "url": "{{base_url}}/api/users"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439012\",\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@example.com\",\n  \"role\": \"employee\",\n  \"department\": \"Retail E-commerce\",\n  \"isActive\": true,\n  \"emailVerified\": false,\n  \"createdAt\": \"2024-12-01T11:00:00.000Z\",\n  \"updatedAt\": \"2024-12-01T11:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Get Assignable Users",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/users/helpers/assignable-users"
          }
        },
        {
          "name": "Get My Team",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/users/helpers/my-team"
          }
        }
      ]
    },
    {
      "name": "Projects Management",
      "item": [
        {
          "name": "Get All Projects (RBAC)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/projects?page=1&limit=10&status=Active&department=India%20E-commerce"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/projects?page=1&limit=10&status=Active&department=India%20E-commerce"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"projects\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439031\",\n      \"title\": \"E-commerce Platform\",\n      \"description\": \"Build a modern e-commerce platform\",\n      \"status\": \"Active\",\n      \"priority\": \"High\",\n      \"createdBy\": {\n        \"_id\": \"507f1f77bcf86cd799439011\",\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\"\n      },\n      \"startDate\": \"2024-01-01T00:00:00.000Z\",\n      \"dueDate\": \"2024-12-31T00:00:00.000Z\",\n      \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n      \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n    }\n  ],\n  \"currentPage\": 1,\n  \"totalPages\": 5,\n  \"totalProjects\": 50\n}"
            }
          ]
        },
        {
          "name": "Get Project By ID (RBAC)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/projects/{{project_id}}"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/projects/{{project_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"project\": {\n    \"_id\": \"507f1f77bcf86cd799439031\",\n    \"title\": \"E-commerce Platform\",\n    \"description\": \"Build a modern e-commerce platform\",\n    \"status\": \"Active\",\n    \"priority\": \"High\",\n    \"createdBy\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"startDate\": \"2024-01-01T00:00:00.000Z\",\n    \"dueDate\": \"2024-12-31T00:00:00.000Z\",\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n  },\n  \"tasks\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439021\",\n      \"id\": \"TASK-0001\",\n      \"projectId\": \"507f1f77bcf86cd799439031\",\n      \"task\": \"Implement User Authentication\",\n      \"description\": \"Create login and registration functionality\",\n      \"taskType\": \"Feature\",\n      \"priority\": \"High\",\n      \"status\": \"In Progress\",\n      \"assignedTo\": {\n        \"_id\": \"507f1f77bcf86cd799439011\",\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\"\n      },\n      \"reporter\": {\n        \"_id\": \"507f1f77bcf86cd799439012\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane@example.com\"\n      },\n      \"eta\": \"2024-12-31T00:00:00.000Z\",\n      \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n      \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "Get Project Tasks (RBAC)",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/projects/{{project_id}}/tasks",
            "description": "Get all tasks associated with a specific project. Returns an array of tasks with populated user details for assignedTo and reporter fields."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/projects/{{project_id}}/tasks"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"_id\": \"507f1f77bcf86cd799439021\",\n    \"id\": \"TASK-0001\",\n    \"projectId\": \"507f1f77bcf86cd799439031\",\n    \"task\": \"Implement User Authentication\",\n    \"description\": \"Create login and registration functionality with JWT tokens\",\n    \"taskType\": \"Feature\",\n    \"priority\": \"High\",\n    \"status\": \"In Progress\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"startDate\": \"2024-12-01T00:00:00.000Z\",\n    \"eta\": \"2024-12-31T00:00:00.000Z\",\n    \"estimatedHours\": 8,\n    \"actualHours\": 3,\n    \"remark\": \"Started working on authentication flow\",\n    \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n    \"sprint\": \"Sprint 1\",\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n  },\n  {\n    \"_id\": \"507f1f77bcf86cd799439022\",\n    \"id\": \"TASK-0002\",\n    \"projectId\": \"507f1f77bcf86cd799439031\",\n    \"task\": \"Fix Login Bug\",\n    \"description\": \"Resolve issue with login form validation\",\n    \"taskType\": \"Bug\",\n    \"priority\": \"Critical\",\n    \"status\": \"To Do\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"eta\": \"2024-12-15T00:00:00.000Z\",\n    \"estimatedHours\": 4,\n    \"labels\": [\"bug\", \"frontend\"],\n    \"createdAt\": \"2024-12-01T16:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T16:00:00.000Z\"\n  }\n]"
            },
            {
              "name": "Error Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{base_url}}/api/projects/nonexistent-id/tasks"
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Failed to fetch project tasks\",\n  \"message\": \"Database connection error\"\n}"
            }
          ]
        },
        {
          "name": "Get Project Tasks",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{base_url}}/api/projects/{{project_id}}/tasks",
            "description": "Get all tasks associated with a specific project. Returns an array of tasks with populated user details for assignedTo and reporter fields."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{base_url}}/api/projects/{{project_id}}/tasks"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"_id\": \"507f1f77bcf86cd799439021\",\n    \"id\": \"TASK-0001\",\n    \"projectId\": \"507f1f77bcf86cd799439031\",\n    \"task\": \"Implement User Authentication\",\n    \"description\": \"Create login and registration functionality with JWT tokens\",\n    \"taskType\": \"Feature\",\n    \"priority\": \"High\",\n    \"status\": \"In Progress\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"startDate\": \"2024-12-01T00:00:00.000Z\",\n    \"eta\": \"2024-12-31T00:00:00.000Z\",\n    \"estimatedHours\": 8,\n    \"actualHours\": 3,\n    \"remark\": \"Started working on authentication flow\",\n    \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n    \"sprint\": \"Sprint 1\",\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n  },\n  {\n    \"_id\": \"507f1f77bcf86cd799439022\",\n    \"id\": \"TASK-0002\",\n    \"projectId\": \"507f1f77bcf86cd799439031\",\n    \"task\": \"Fix Login Bug\",\n    \"description\": \"Resolve issue with login form validation\",\n    \"taskType\": \"Bug\",\n    \"priority\": \"Critical\",\n    \"status\": \"To Do\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"eta\": \"2024-12-15T00:00:00.000Z\",\n    \"estimatedHours\": 4,\n    \"labels\": [\"bug\", \"frontend\"],\n    \"createdAt\": \"2024-12-01T16:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T16:00:00.000Z\"\n  }\n]"
            },
            {
              "name": "Error Response",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{base_url}}/api/projects/nonexistent-id/tasks"
              },
              "status": "Internal Server Error",
              "code": 500,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Failed to fetch project tasks\",\n  \"message\": \"Database connection error\"\n}"
            }
          ]
        },
        {
          "name": "Create Project",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"E-commerce Platform\",\n  \"description\": \"Build a modern e-commerce platform with React and Node.js\",\n  \"status\": \"Active\",\n  \"priority\": \"High\",\n  \"startDate\": \"2024-01-01\",\n  \"dueDate\": \"2024-12-31\",\n  \"assignedTo\": [\"507f1f77bcf86cd799439011\"],\n  \"teamMembers\": [\n    {\n      \"user\": \"507f1f77bcf86cd799439012\",\n      \"role\": \"developer\"\n    },\n    {\n      \"user\": \"507f1f77bcf86cd799439013\",\n      \"role\": \"designer\"\n    }\n  ]\n}"
            },
            "url": "{{base_url}}/api/projects",
            "description": "Create a new project with team members and assigned users.\n\n**Features:**\n- Validates all user IDs exist before creating project\n- Prevents duplicate team members\n- Creates notifications for all team members\n- Supports team member roles\n\n**Department Rules:**\n- Managers/Admins: Can add team members from any department\n- Employees: Can only add team members from their own department\n\n**Required Fields:** title\n**Optional Fields:** description, status, priority, startDate, dueDate, assignedTo, teamMembers"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"E-commerce Platform\",\n  \"description\": \"Build a modern e-commerce platform with React and Node.js\",\n  \"status\": \"Active\",\n  \"priority\": \"High\",\n  \"startDate\": \"2024-01-01\",\n  \"dueDate\": \"2024-12-31\",\n  \"assignedTo\": [\"507f1f77bcf86cd799439011\"],\n  \"teamMembers\": [\n    {\n      \"user\": \"507f1f77bcf86cd799439012\",\n      \"role\": \"developer\"\n    },\n    {\n      \"user\": \"507f1f77bcf86cd799439013\",\n      \"role\": \"designer\"\n    }\n  ]\n}"
                },
                "url": "{{base_url}}/api/projects"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439031\",\n  \"title\": \"E-commerce Platform\",\n  \"description\": \"Build a modern e-commerce platform with React and Node.js\",\n  \"status\": \"Active\",\n  \"priority\": \"High\",\n  \"startDate\": \"2024-01-01T00:00:00.000Z\",\n  \"dueDate\": \"2024-12-31T00:00:00.000Z\",\n  \"createdBy\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"assignedTo\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    }\n  ],\n  \"teamMembers\": [\n    {\n      \"user\": {\n        \"_id\": \"507f1f77bcf86cd799439012\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane@example.com\"\n      },\n      \"role\": \"developer\"\n    },\n    {\n      \"user\": {\n        \"_id\": \"507f1f77bcf86cd799439013\",\n        \"name\": \"Bob Wilson\",\n        \"email\": \"bob@example.com\"\n      },\n      \"role\": \"designer\"\n    }\n  ],\n  \"progress\": 0,\n  \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n  \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n}"
            },
            {
              "name": "Validation Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"description\": \"Build a modern e-commerce platform\",\n  \"assignedTo\": [\"invalid-user-id\"]\n}"
                },
                "url": "{{base_url}}/api/projects"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Missing required field\",\n  \"message\": \"Project title is required\"\n}"
            }
          ]
        },
        {
          "name": "Update Project",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated E-commerce Platform\",\n  \"description\": \"Updated description with new features\",\n  \"status\": \"Active\",\n  \"priority\": \"Critical\",\n  \"teamMembers\": [\n    {\n      \"user\": \"507f1f77bcf86cd799439012\",\n      \"role\": \"lead-developer\"\n    },\n    {\n      \"user\": \"507f1f77bcf86cd799439013\",\n      \"role\": \"senior-designer\"\n    }\n  ]\n}"
            },
            "url": "{{base_url}}/api/projects/{{project_id}}",
            "description": "Update project details with team member management.\n\n**Features:**\n- Validates all user IDs exist before updating\n- Prevents duplicate team members\n- Creates notifications for all team members\n- Only project creator or admin can update\n\n**Department Rules:**\n- Managers/Admins: Can add team members from any department\n- Employees: Can only add team members from their own department\n\n**All fields are optional** - only send the fields you want to update"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Updated E-commerce Platform\",\n  \"description\": \"Updated description with new features\",\n  \"status\": \"Active\",\n  \"priority\": \"Critical\",\n  \"teamMembers\": [\n    {\n      \"user\": \"507f1f77bcf86cd799439012\",\n      \"role\": \"lead-developer\"\n    },\n    {\n      \"user\": \"507f1f77bcf86cd799439013\",\n      \"role\": \"senior-designer\"\n    }\n  ]\n}"
                },
                "url": "{{base_url}}/api/projects/{{project_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439031\",\n  \"title\": \"Updated E-commerce Platform\",\n  \"description\": \"Updated description with new features\",\n  \"status\": \"Active\",\n  \"priority\": \"Critical\",\n  \"createdBy\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"assignedTo\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    }\n  ],\n  \"teamMembers\": [\n    {\n      \"user\": {\n        \"_id\": \"507f1f77bcf86cd799439012\",\n        \"name\": \"Jane Smith\",\n        \"email\": \"jane@example.com\"\n      },\n      \"role\": \"lead-developer\"\n    },\n    {\n      \"user\": {\n        \"_id\": \"507f1f77bcf86cd799439013\",\n        \"name\": \"Bob Wilson\",\n        \"email\": \"bob@example.com\"\n      },\n      \"role\": \"senior-designer\"\n    }\n  ],\n  \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Delete Project",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": "{{base_url}}/api/projects/{{project_id}}",
            "description": "Delete a project and all associated tasks.\n\n**Features:**\n- Deletes all associated tasks (handles mixed projectId formats)\n- Removes project files from storage\n- Creates notifications for team members\n- Only project creator or admin can delete\n\n**Warning:** This action is irreversible!"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "url": "{{base_url}}/api/projects/{{project_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Project deleted successfully\",\n  \"deletedProject\": {\n    \"_id\": \"507f1f77bcf86cd799439031\",\n    \"title\": \"E-commerce Platform\",\n    \"deletedTasks\": 5\n  }\n}"
            }
          ]
        },
        {
          "name": "Add Team Member",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"507f1f77bcf86cd799439014\",\n  \"role\": \"developer\"\n}"
            },
            "url": "{{base_url}}/api/projects/{{project_id}}/team-members",
            "description": "Add a single team member to a project.\n\n**Features:**\n- Validates user exists before adding\n- Prevents duplicate team members\n- Creates notification for added user\n- Only project creator or admin can add members\n\n**Required Fields:** userId\n**Optional Fields:** role (defaults to 'member')"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"userId\": \"507f1f77bcf86cd799439014\",\n  \"role\": \"developer\"\n}"
                },
                "url": "{{base_url}}/api/projects/{{project_id}}/team-members"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Team member added successfully\",\n  \"addedMember\": {\n    \"user\": {\n      \"_id\": \"507f1f77bcf86cd799439014\",\n      \"name\": \"Alice Johnson\",\n      \"email\": \"alice@example.com\"\n    },\n    \"role\": \"developer\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Remove Team Member",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "url": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}",
            "description": "Remove a team member from a project.\n\n**Features:**\n- Validates user is a team member before removing\n- Creates notification for removed user\n- Only project creator or admin can remove members\n\n**Parameters:**\n- `{{project_id}}`: Project ID\n- `{{user_id}}`: User ID to remove"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "url": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Team member removed successfully\",\n  \"removedMember\": {\n    \"user\": {\n      \"_id\": \"507f1f77bcf86cd799439014\",\n      \"name\": \"Alice Johnson\",\n      \"email\": \"alice@example.com\"\n    },\n    \"role\": \"developer\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Update Team Member Role",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"role\": \"senior-developer\"\n}"
            },
            "url": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}",
            "description": "Update a team member's role in a project.\n\n**Features:**\n- Validates user is a team member before updating\n- Creates notification for role change\n- Only project creator or admin can update roles\n\n**Parameters:**\n- `{{project_id}}`: Project ID\n- `{{user_id}}`: User ID to update\n\n**Required Fields:** role"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"role\": \"senior-developer\"\n}"
                },
                "url": "{{base_url}}/api/projects/{{project_id}}/team-members/{{user_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Team member role updated successfully\",\n  \"updatedMember\": {\n    \"user\": {\n      \"_id\": \"507f1f77bcf86cd799439014\",\n      \"name\": \"Alice Johnson\",\n      \"email\": \"alice@example.com\"\n    },\n    \"role\": \"senior-developer\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Bulk Add Team Members",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"teamMembers\": [\n    {\n      \"userId\": \"507f1f77bcf86cd799439014\",\n      \"role\": \"developer\"\n    },\n    {\n      \"userId\": \"507f1f77bcf86cd799439015\",\n      \"role\": \"tester\"\n    },\n    {\n      \"userId\": \"507f1f77bcf86cd799439016\",\n      \"role\": \"designer\"\n    }\n  ]\n}"
            },
            "url": "{{base_url}}/api/projects/{{project_id}}/team-members/bulk",
            "description": "Add multiple team members to a project at once.\n\n**Features:**\n- Validates all user IDs exist before adding\n- Prevents duplicate team members\n- Skips users already in the team\n- Creates notifications for all added users\n- Only project creator or admin can add members\n\n**Required Fields:** teamMembers (array)\n**Each team member object:**\n- `userId`: User ID (required)\n- `role`: Role (optional, defaults to 'member')"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"teamMembers\": [\n    {\n      \"userId\": \"507f1f77bcf86cd799439014\",\n      \"role\": \"developer\"\n    },\n    {\n      \"userId\": \"507f1f77bcf86cd799439015\",\n      \"role\": \"tester\"\n    },\n    {\n      \"userId\": \"507f1f77bcf86cd799439016\",\n      \"role\": \"designer\"\n    }\n  ]\n}"
                },
                "url": "{{base_url}}/api/projects/{{project_id}}/team-members/bulk"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Successfully added 3 team member(s)\",\n  \"addedMembers\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439014\",\n      \"name\": \"Alice Johnson\",\n      \"email\": \"alice@example.com\",\n      \"role\": \"developer\"\n    },\n    {\n      \"_id\": \"507f1f77bcf86cd799439015\",\n      \"name\": \"Charlie Brown\",\n      \"email\": \"charlie@example.com\",\n      \"role\": \"tester\"\n    },\n    {\n      \"_id\": \"507f1f77bcf86cd799439016\",\n      \"name\": \"Diana Prince\",\n      \"email\": \"diana@example.com\",\n      \"role\": \"designer\"\n    }\n  ],\n  \"totalTeamMembers\": 5\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Tasks Management (Updated)",
      "item": [
        {
          "name": "Get All Tasks",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/tasks?department=India%20E-commerce"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/tasks?department=India%20E-commerce"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"_id\": \"507f1f77bcf86cd799439021\",\n    \"id\": \"TASK-0001\",\n    \"projectId\": \"PROJ-001\",\n    \"task\": \"Implement User Authentication\",\n    \"description\": \"Create login and registration functionality with JWT tokens\",\n    \"taskType\": \"Feature\",\n    \"priority\": \"High\",\n    \"status\": \"In Progress\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"startDate\": \"2024-12-01T00:00:00.000Z\",\n    \"eta\": \"2024-12-31T00:00:00.000Z\",\n    \"estimatedHours\": 8,\n    \"actualHours\": 3,\n    \"remark\": \"Started working on authentication flow\",\n    \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n    \"sprint\": \"Sprint 1\",\n    \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n  },\n  {\n    \"_id\": \"507f1f77bcf86cd799439022\",\n    \"id\": \"TASK-0002\",\n    \"projectId\": \"PROJ-001\",\n    \"task\": \"Fix Login Bug\",\n    \"description\": \"Resolve issue with login form validation\",\n    \"taskType\": \"Bug\",\n    \"priority\": \"Critical\",\n    \"status\": \"To Do\",\n    \"assignedTo\": {\n      \"_id\": \"507f1f77bcf86cd799439011\",\n      \"name\": \"John Doe\",\n      \"email\": \"john@example.com\"\n    },\n    \"reporter\": {\n      \"_id\": \"507f1f77bcf86cd799439012\",\n      \"name\": \"Jane Smith\",\n      \"email\": \"jane@example.com\"\n    },\n    \"eta\": \"2024-12-15T00:00:00.000Z\",\n    \"estimatedHours\": 4,\n    \"labels\": [\"bug\", \"frontend\"],\n    \"createdAt\": \"2024-12-01T16:00:00.000Z\",\n    \"updatedAt\": \"2024-12-01T16:00:00.000Z\"\n  }\n]"
            }
          ]
        },
        {
          "name": "Create Task (with User ID)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Implement User Authentication\",\n  \"description\": \"Create login and registration functionality with JWT tokens\",\n  \"taskType\": \"Feature\",\n  \"priority\": \"High\",\n  \"status\": \"To Do\",\n  \"assignedTo\": \"507f1f77bcf86cd799439011\",\n  \"reporter\": \"507f1f77bcf86cd799439012\",\n  \"eta\": \"2024-12-31\",\n  \"estimatedHours\": 8,\n  \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n  \"sprint\": \"Sprint 1\"\n}"
            },
            "url": "{{base_url}}/api/tasks",
            "description": "Create a new task with user ID references.\n\n**Important Changes:**\n- `assignedTo` and `reporter` now accept User IDs (ObjectId strings)\n- You can also pass user email or name - the API will convert them to IDs\n- Task ID is automatically generated with retry logic for duplicates\n\n**User Reference Examples:**\n- **User ID**: `\"assignedTo\": \"507f1f77bcf86cd799439011\"`\n- **User Email**: `\"assignedTo\": \"john@example.com\"`\n- **User Name**: `\"assignedTo\": \"John Doe\"`\n\n**Required Fields:** projectId, task, assignedTo, reporter, eta\n**Optional Fields:** description, taskType, priority, status, startDate, estimatedHours, remark, roadBlock, supportNeeded, labels, attachments, relatedTasks, parentTask, sprint"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Implement User Authentication\",\n  \"description\": \"Create login and registration functionality with JWT tokens\",\n  \"taskType\": \"Feature\",\n  \"priority\": \"High\",\n  \"status\": \"To Do\",\n  \"assignedTo\": \"507f1f77bcf86cd799439011\",\n  \"reporter\": \"507f1f77bcf86cd799439012\",\n  \"eta\": \"2024-12-31\",\n  \"estimatedHours\": 8,\n  \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n  \"sprint\": \"Sprint 1\"\n}"
                },
                "url": "{{base_url}}/api/tasks"
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439021\",\n  \"id\": \"TASK-0003\",\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Implement User Authentication\",\n  \"description\": \"Create login and registration functionality with JWT tokens\",\n  \"taskType\": \"Feature\",\n  \"priority\": \"High\",\n  \"status\": \"To Do\",\n  \"assignedTo\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"reporter\": {\n    \"_id\": \"507f1f77bcf86cd799439012\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\"\n  },\n  \"eta\": \"2024-12-31T00:00:00.000Z\",\n  \"estimatedHours\": 8,\n  \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n  \"sprint\": \"Sprint 1\",\n  \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n  \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n}"
            },
            {
              "name": "Duplicate Task ID Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Test Task\",\n  \"assignedTo\": \"507f1f77bcf86cd799439011\",\n  \"reporter\": \"507f1f77bcf86cd799439012\",\n  \"eta\": \"2024-12-31\"\n}"
                },
                "url": "{{base_url}}/api/tasks"
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Duplicate task ID\",\n  \"message\": \"A task with this ID already exists. Please try again.\"\n}"
            },
            {
              "name": "Invalid User Reference Error",
              "originalRequest": {
                "method": "POST",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Test Task\",\n  \"assignedTo\": \"nonexistent@email.com\",\n  \"reporter\": \"507f1f77bcf86cd799439012\",\n  \"eta\": \"2024-12-31\"\n}"
                },
                "url": "{{base_url}}/api/tasks"
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Invalid user reference\",\n  \"message\": \"User not found with provided email\"\n}"
            }
          ]
        },
        {
          "name": "Create Task (with User Email)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Fix Login Bug\",\n  \"description\": \"Resolve issue with login form validation\",\n  \"taskType\": \"Bug\",\n  \"priority\": \"Critical\",\n  \"status\": \"To Do\",\n  \"assignedTo\": \"john@example.com\",\n  \"reporter\": \"jane@example.com\",\n  \"eta\": \"2024-12-15\",\n  \"estimatedHours\": 4,\n  \"labels\": [\"bug\", \"frontend\"]\n}"
            },
            "url": "{{base_url}}/api/tasks",
            "description": "Create task using user email addresses. The API will automatically convert emails to user IDs."
          }
        },
        {
          "name": "Create Task (with User Name)",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Update Documentation\",\n  \"description\": \"Update API documentation with new endpoints\",\n  \"taskType\": \"Documentation\",\n  \"priority\": \"Medium\",\n  \"status\": \"To Do\",\n  \"assignedTo\": \"John Doe\",\n  \"reporter\": \"Jane Smith\",\n  \"eta\": \"2024-12-20\",\n  \"estimatedHours\": 6,\n  \"labels\": [\"documentation\", \"api\"]\n}"
            },
            "url": "{{base_url}}/api/tasks",
            "description": "Create task using user names. The API will automatically convert names to user IDs (case insensitive)."
          }
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"In Progress\",\n  \"actualHours\": 3,\n  \"remark\": \"Started working on authentication flow\",\n  \"startDate\": \"2024-12-01\"\n}"
            },
            "url": "{{base_url}}/api/tasks/{{task_id}}",
            "description": "Update any task field with flexible updates.\n\n**Important:** The task_id parameter must be the MongoDB ObjectId (_id field), not the custom task ID (id field).\n\n**Example:**\n- ✅ Correct: /api/tasks/507f1f77bcf86cd799439021 (using _id)\n- ❌ Wrong: /api/tasks/TASK-0001 (using custom id)\n\n**Common Update Examples:**\n- **Start Work**: `{\"status\": \"In Progress\", \"startDate\": \"2024-12-01\"}`\n- **Add Roadblock**: `{\"status\": \"Blocked\", \"roadBlock\": \"Need API docs\", \"supportNeeded\": \"Backend specs\"}`\n- **Complete Task**: `{\"status\": \"Completed\", \"actualHours\": 8, \"remark\": \"Successfully completed\"}`\n- **Reassign Task**: `{\"assignedTo\": \"jane@example.com\"}` (supports ID, email, or name)\n- **Add Attachments**: `{\"attachments\": [\"docs.pdf\", \"screenshots.zip\"]}`\n- **Link Related Tasks**: `{\"relatedTasks\": [\"TASK-0002\", \"TASK-0003\"], \"parentTask\": \"TASK-0001\"}`\n- **Update Labels**: `{\"labels\": [\"frontend\", \"auth\", \"completed\"]}`\n\n**All fields are optional** - only send the fields you want to update."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  { "key": "Content-Type", "value": "application/json" },
                  { "key": "Authorization", "value": "Bearer {{token}}" }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"status\": \"In Progress\",\n  \"actualHours\": 3,\n  \"remark\": \"Started working on authentication flow\",\n  \"startDate\": \"2024-12-01\"\n}"
                },
                "url": "{{base_url}}/api/tasks/{{task_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439021\",\n  \"id\": \"TASK-0001\",\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Implement User Authentication\",\n  \"description\": \"Create login and registration functionality with JWT tokens\",\n  \"taskType\": \"Feature\",\n  \"priority\": \"High\",\n  \"status\": \"In Progress\",\n  \"assignedTo\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"reporter\": {\n    \"_id\": \"507f1f77bcf86cd799439012\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\"\n  },\n  \"startDate\": \"2024-12-01T00:00:00.000Z\",\n  \"eta\": \"2024-12-31T00:00:00.000Z\",\n  \"estimatedHours\": 8,\n  \"actualHours\": 3,\n  \"remark\": \"Started working on authentication flow\",\n  \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n  \"sprint\": \"Sprint 1\",\n  \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n  \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n}"
            }
          ]
        },
        {
          "name": "Get Task By ID",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/tasks/{{task_id}}",
            "description": "Get a specific task by its MongoDB ObjectId (_id field).\n\n**Important:** The task_id parameter must be the MongoDB ObjectId (_id field), not the custom task ID (id field).\n\n**Example:**\n- ✅ Correct: /api/tasks/507f1f77bcf86cd799439021 (using _id)\n- ❌ Wrong: /api/tasks/TASK-0001 (using custom id)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/tasks/{{task_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"_id\": \"507f1f77bcf86cd799439021\",\n  \"id\": \"TASK-0001\",\n  \"projectId\": \"PROJ-001\",\n  \"task\": \"Implement User Authentication\",\n  \"description\": \"Create login and registration functionality with JWT tokens\",\n  \"taskType\": \"Feature\",\n  \"priority\": \"High\",\n  \"status\": \"In Progress\",\n  \"assignedTo\": {\n    \"_id\": \"507f1f77bcf86cd799439011\",\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"reporter\": {\n    \"_id\": \"507f1f77bcf86cd799439012\",\n    \"name\": \"Jane Smith\",\n    \"email\": \"jane@example.com\"\n  },\n  \"startDate\": \"2024-12-01T00:00:00.000Z\",\n  \"eta\": \"2024-12-31T00:00:00.000Z\",\n  \"estimatedHours\": 8,\n  \"actualHours\": 3,\n  \"remark\": \"Started working on authentication flow\",\n  \"labels\": [\"frontend\", \"auth\", \"urgent\"],\n  \"sprint\": \"Sprint 1\",\n  \"createdAt\": \"2024-12-01T10:00:00.000Z\",\n  \"updatedAt\": \"2024-12-01T15:00:00.000Z\"\n}"
            },
            {
              "name": "Task Not Found",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/tasks/nonexistent-id"
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Task not found\",\n  \"message\": \"No task found with the provided ID\"\n}"
            }
          ]
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/tasks/{{task_id}}",
            "description": "Delete a specific task by its MongoDB ObjectId (_id field).\n\n**Important:** The task_id parameter must be the MongoDB ObjectId (_id field), not the custom task ID (id field).\n\n**Example:**\n- ✅ Correct: /api/tasks/507f1f77bcf86cd799439021 (using _id)\n- ❌ Wrong: /api/tasks/TASK-0001 (using custom id)"
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "DELETE",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/tasks/{{task_id}}"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Task deleted successfully\",\n  \"deletedTaskId\": \"TASK-0001\"\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "Dashboard & Analytics",
      "item": [
        {
          "name": "Get Dashboard Summary",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/dashboard/summary",
            "description": "Get comprehensive dashboard data in a single response for optimal performance. Returns aggregated statistics including project counts, task counts, team member counts, recent projects, and task progress summary."
          },
          "response": [
            {
              "name": "Success Response",
              "originalRequest": {
                "method": "GET",
                "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
                "url": "{{base_url}}/api/dashboard/summary"
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"activeProjectsCount\": 2,\n  \"totalTasksCount\": 6,\n  \"inProgressTasksCount\": 2,\n  \"completedTasksCount\": 3,\n  \"totalTeamMembersCount\": 5,\n  \"recentProjects\": [\n    {\n      \"_id\": \"507f1f77bcf86cd799439031\",\n      \"title\": \"E-commerce Website Development\",\n      \"description\": \"Complete online store with payment integration\",\n      \"status\": \"Active\",\n      \"updatedAt\": \"2024-12-01T10:00:00.000Z\"\n    },\n    {\n      \"_id\": \"507f1f77bcf86cd799439032\",\n      \"title\": \"Mobile App Development\",\n      \"description\": \"Cross-platform mobile application\",\n      \"status\": \"Active\",\n      \"updatedAt\": \"2024-12-01T09:00:00.000Z\"\n    }\n  ],\n  \"taskProgress\": {\n    \"completed\": 3,\n    \"inProgress\": 2,\n    \"total\": 6\n  },\n  \"totalProjectsCount\": 3,\n  \"pendingTasksCount\": 1,\n  \"overdueTasksCount\": 0\n}"
            },
            {
              "name": "Unauthorized Error",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": "{{base_url}}/api/dashboard/summary"
              },
              "status": "Unauthorized",
              "code": 401,
              "_postman_previewlanguage": "json",
              "header": [
                { "key": "Content-Type", "value": "application/json" }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Access denied\",\n  \"message\": \"No token provided\"\n}"
            }
          ]
        },
        {
          "name": "Get Dashboard Stats",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/dashboard",
            "description": "Get basic dashboard statistics including project and task counts."
          }
        },
        {
          "name": "Get Projects Summary",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/dashboard/projects-summary",
            "description": "Get project statistics grouped by status and priority."
          }
        },
        {
          "name": "Get Tasks Summary",
          "request": {
            "method": "GET",
            "header": [ { "key": "Authorization", "value": "Bearer {{token}}" } ],
            "url": "{{base_url}}/api/dashboard/tasks-summary",
            "description": "Get task statistics grouped by status and priority."
          }
        }
      ]
    },
    {
      "name": "Migration & Maintenance",
      "item": [
        {
          "name": "Reset Task ID Counter",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{base_url}}/migration/reset-task-counter",
            "description": "This is a maintenance endpoint to reset the task ID counter. Run this if you encounter duplicate task ID errors."
          }
        },
        {
          "name": "Migrate Task Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": "{{base_url}}/migration/fix-task-users",
            "description": "This is a maintenance endpoint to convert existing task user references from names/emails to proper user IDs."
          }
        }
      ]
    }
  ],
  "variable": [
    { "key": "base_url", "value": "http://localhost:5000" },
    { "key": "token", "value": "" },
    { "key": "user_id", "value": "507f1f77bcf86cd799439011" },
    { "key": "project_id", "value": "PROJ-001" },
    { "key": "task_id", "value": "507f1f77bcf86cd799439021" },
    { "key": "user_task_id", "value": "" }
  ]
}





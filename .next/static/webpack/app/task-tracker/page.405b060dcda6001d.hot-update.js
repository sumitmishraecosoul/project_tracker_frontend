"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/task-tracker/page",{

/***/ "(app-pages-browser)/./lib/config.ts":
/*!***********************!*\
  !*** ./lib/config.ts ***!
  \***********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Environment configuration\nconst config = {\n    // API Configuration\n    api: {\n        // Development backend URL\n        development: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000',\n        // Production backend URL\n        production: 'https://project-tracker-backend-xi.vercel.app'\n    },\n    // Environment detection\n    isDevelopment: \"development\" === 'development',\n    isProduction: \"development\" === 'production',\n    isStaging: \"development\" === 'staging',\n    // Get current API URL based on environment\n    getApiUrl: ()=>{\n        // Check if we're in production (Vercel or Azure)\n        if (false) {}\n        // Check if we're in development\n        if (true) {\n            return config.api.development;\n        }\n        // Fallback to production for Vercel preview deployments\n        return config.api.production;\n    },\n    // App configuration\n    app: {\n        name: 'Project Tracker',\n        version: process.env.npm_package_version || '1.0.0'\n    },\n    // Feature flags\n    features: {\n        enableDebugLogging: \"development\" === 'development',\n        enableAnalytics: \"development\" === 'production'\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9jb25maWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw0QkFBNEI7QUFDckIsTUFBTUEsU0FBUztJQUNwQixvQkFBb0I7SUFDcEJDLEtBQUs7UUFDSCwwQkFBMEI7UUFDMUJDLGFBQWFDLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsbUJBQW1CLElBQUk7UUFDaEQseUJBQXlCO1FBQ3pCQyxZQUFZO0lBQ2Q7SUFFQSx3QkFBd0I7SUFDeEJDLGVBQWVKLGtCQUF5QjtJQUN4Q0ssY0FBY0wsa0JBQXlCO0lBQ3ZDTSxXQUFXTixrQkFBeUI7SUFFcEMsMkNBQTJDO0lBQzNDTyxXQUFXO1FBQ1QsaURBQWlEO1FBQ2pELElBQUlQLEtBQXFDLEVBQUUsRUFFMUM7UUFFRCxnQ0FBZ0M7UUFDaEMsSUFBSUEsSUFBc0MsRUFBRTtZQUMxQyxPQUFPSCxPQUFPQyxHQUFHLENBQUNDLFdBQVc7UUFDL0I7UUFFQSx3REFBd0Q7UUFDeEQsT0FBT0YsT0FBT0MsR0FBRyxDQUFDSyxVQUFVO0lBQzlCO0lBRUEsb0JBQW9CO0lBQ3BCSyxLQUFLO1FBQ0hDLE1BQU07UUFDTkMsU0FBU1YsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDVSxtQkFBbUIsSUFBSTtJQUM5QztJQUVBLGdCQUFnQjtJQUNoQkMsVUFBVTtRQUNSQyxvQkFBb0JiLGtCQUF5QjtRQUM3Q2MsaUJBQWlCZCxrQkFBeUI7SUFDNUM7QUFDRixFQUFFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXFN1bWl0IE1pc2hyYVxcT25lRHJpdmUgLSBFY29Tb3VsIEhvbWVcXERvY3VtZW50c1xcUHJvamVjdCB0cmFja2VyclxcUHJvamVjdCB0cmFja2VyXFxsaWJcXGNvbmZpZy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBFbnZpcm9ubWVudCBjb25maWd1cmF0aW9uXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgLy8gQVBJIENvbmZpZ3VyYXRpb25cclxuICBhcGk6IHtcclxuICAgIC8vIERldmVsb3BtZW50IGJhY2tlbmQgVVJMXHJcbiAgICBkZXZlbG9wbWVudDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTCB8fCAnaHR0cDovL2xvY2FsaG9zdDo1MDAwJyxcclxuICAgIC8vIFByb2R1Y3Rpb24gYmFja2VuZCBVUkxcclxuICAgIHByb2R1Y3Rpb246ICdodHRwczovL3Byb2plY3QtdHJhY2tlci1iYWNrZW5kLXhpLnZlcmNlbC5hcHAnLFxyXG4gIH0sXHJcbiAgXHJcbiAgLy8gRW52aXJvbm1lbnQgZGV0ZWN0aW9uXHJcbiAgaXNEZXZlbG9wbWVudDogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcsXHJcbiAgaXNQcm9kdWN0aW9uOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nLFxyXG4gIGlzU3RhZ2luZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdzdGFnaW5nJyxcclxuICBcclxuICAvLyBHZXQgY3VycmVudCBBUEkgVVJMIGJhc2VkIG9uIGVudmlyb25tZW50XHJcbiAgZ2V0QXBpVXJsOiAoKSA9PiB7XHJcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBpbiBwcm9kdWN0aW9uIChWZXJjZWwgb3IgQXp1cmUpXHJcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xyXG4gICAgICByZXR1cm4gY29uZmlnLmFwaS5wcm9kdWN0aW9uO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBDaGVjayBpZiB3ZSdyZSBpbiBkZXZlbG9wbWVudFxyXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnKSB7XHJcbiAgICAgIHJldHVybiBjb25maWcuYXBpLmRldmVsb3BtZW50O1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvLyBGYWxsYmFjayB0byBwcm9kdWN0aW9uIGZvciBWZXJjZWwgcHJldmlldyBkZXBsb3ltZW50c1xyXG4gICAgcmV0dXJuIGNvbmZpZy5hcGkucHJvZHVjdGlvbjtcclxuICB9LFxyXG4gIFxyXG4gIC8vIEFwcCBjb25maWd1cmF0aW9uXHJcbiAgYXBwOiB7XHJcbiAgICBuYW1lOiAnUHJvamVjdCBUcmFja2VyJyxcclxuICAgIHZlcnNpb246IHByb2Nlc3MuZW52Lm5wbV9wYWNrYWdlX3ZlcnNpb24gfHwgJzEuMC4wJyxcclxuICB9LFxyXG4gIFxyXG4gIC8vIEZlYXR1cmUgZmxhZ3NcclxuICBmZWF0dXJlczoge1xyXG4gICAgZW5hYmxlRGVidWdMb2dnaW5nOiBwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50JyxcclxuICAgIGVuYWJsZUFuYWx5dGljczogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJyxcclxuICB9LFxyXG59O1xyXG4iXSwibmFtZXMiOlsiY29uZmlnIiwiYXBpIiwiZGV2ZWxvcG1lbnQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfQVBJX1VSTCIsInByb2R1Y3Rpb24iLCJpc0RldmVsb3BtZW50IiwiaXNQcm9kdWN0aW9uIiwiaXNTdGFnaW5nIiwiZ2V0QXBpVXJsIiwiYXBwIiwibmFtZSIsInZlcnNpb24iLCJucG1fcGFja2FnZV92ZXJzaW9uIiwiZmVhdHVyZXMiLCJlbmFibGVEZWJ1Z0xvZ2dpbmciLCJlbmFibGVBbmFseXRpY3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/config.ts\n"));

/***/ })

});